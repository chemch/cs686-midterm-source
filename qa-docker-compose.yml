
services:

  web-frontend:
    environment:
      CONTAINER_PORT: 6666
      VITE_API_PROTOCOL: http
      VITE_API_HOST: localhost
      VITE_API_PORT: 4001
      VITE_LOCAL_BUILD: true
    build:
      context: ./web-ui
    ports:
      - "6001:6666"
    depends_on:
      api-backend:
        condition: service_healthy
    networks:
      - app-net
    restart: always

  api-backend:
    build:
      context: ./api-server
    ports:
      - "4001:4444"
    environment:
      HOST_PORT: 4001
      DB_HOST: mysql-db
      DB_DATABASE: ${MYSQL_TEST_DATABASE}
      DB_USER: ${MYSQL_TEST_USER}
      DB_PASSWORD: ${MYSQL_TEST_USER_PASSWORD}
      DB_WAITFORCONNECTIONS: ${API_DB_WAITFORCONNECTIONS}
      DB_CONNECTIONLIMIT: ${API_DB_CONNECTIONLIMIT}
      DB_QUEUELIMIT: ${API_DB_QUEUELIMIT}
      DB_TABLE_NAME: ${API_DB_TABLE_NAME}
    depends_on:
      mysql-db:
        condition: service_healthy
    entrypoint: ["./wait-for-it.sh", "mysql-db:3306", "--", "npm", "start"]
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/test"]
      interval: 30s
      retries: 5
      timeout: 5s
    restart: always

  mysql-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
      MYSQL_USER: ${MYSQL_TEST_USER}
      MYSQL_PASSWORD: ${MYSQL_TEST_USER_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - app-net
    restart: always

volumes:
  db-data:

networks:
  app-net:
    driver: bridge
